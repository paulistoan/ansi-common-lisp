(defun finder (obj vec key start end)
  (let ((range (- end start)))
    (if (zerop range)
        (let ((sv (aref vec start)))
          (when (eql obj (funcall key sv))
            sv))
        (let* ((mid (+ start (round (/ range 2))))
               (mv (aref vec mid))
               (obj2 (funcall key mv)))
          (if (< obj obj2)
              (finder obj vec key start (- mid 1))
              (if (> obj obj2)
                  (finder obj vec key (+ mid 1) end)
                  mv))))))

(defun bin-search (obj vec &key (key #'identity)
                   (start 0) (end (- (length vec) 1)))
  (and (>= end start 0)
       (<= start end (- (length vec) 1))
       (finder obj vec key start end)))